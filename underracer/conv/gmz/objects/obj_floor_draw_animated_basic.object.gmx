<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (view_current=0) {
if distance_to_object(obj_cam1) &gt; global.renderdistance exit{
if !variable_local_exists("z") z = 0;
      d3d_primitive_begin_texture(pr_trianglelist, sprite_get_texture(floortex,image_index));
      d3d_vertex_normal_texture(x, y, zbottom+z, 0, 0, 1, 0, 0);
      d3d_vertex_normal_texture(x + 32, y, zbottom+z, 0, 0, 1, 1, 0);
      d3d_vertex_normal_texture(x + 32, y + 32, zbottom+z, 0, 0, 1, 1, 1);
      //
      d3d_vertex_normal_texture(x + 32, y + 32, zbottom+z, 0, 0, 1, 1, 1);
      d3d_vertex_normal_texture(x, y + 32, zbottom+z, 0, 0, 1, 0, 1);
      d3d_vertex_normal_texture(x, y, zbottom+z, 0, 0, 1, 0, 0);
  d3d_primitive_end();
  d3d_primitive_begin_texture(pr_trianglelist, background_get_texture(rooftex));
      d3d_vertex_normal_texture(x, y, ztop+z, 0, 0, -1, 0, 0);
      d3d_vertex_normal_texture(x + 32, y, ztop+z, 0, 0, -1, 1, 0);
      d3d_vertex_normal_texture(x + 32, y + 32, ztop+z, 0, 0, -1, 1, 1);
      //
      d3d_vertex_normal_texture(x + 32, y + 32, ztop+z, 0, 0, -1, 1, 1);
      d3d_vertex_normal_texture(x, y + 32, ztop+z, 0, 0, -1, 0, 1);
      d3d_vertex_normal_texture(x, y, ztop+z, 0, 0, -1, 0, 0);
  d3d_primitive_end()
}}

if global.players&gt;1{
if (view_current=1) {
if distance_to_object(obj_cam2) &gt; global.renderdistance exit{
if !variable_local_exists("z") z = 0;
      d3d_primitive_begin_texture(pr_trianglelist, sprite_get_texture(floortex,image_index));
      d3d_vertex_normal_texture(x, y, zbottom+z, 0, 0, 1, 0, 0);
      d3d_vertex_normal_texture(x + 32, y, zbottom+z, 0, 0, 1, 1, 0);
      d3d_vertex_normal_texture(x + 32, y + 32, zbottom+z, 0, 0, 1, 1, 1);
      //
      d3d_vertex_normal_texture(x + 32, y + 32, zbottom+z, 0, 0, 1, 1, 1);
      d3d_vertex_normal_texture(x, y + 32, zbottom+z, 0, 0, 1, 0, 1);
      d3d_vertex_normal_texture(x, y, zbottom+z, 0, 0, 1, 0, 0);
  d3d_primitive_end();
  d3d_primitive_begin_texture(pr_trianglelist, background_get_texture(rooftex));
      d3d_vertex_normal_texture(x, y, ztop+z, 0, 0, -1, 0, 0);
      d3d_vertex_normal_texture(x + 32, y, ztop+z, 0, 0, -1, 1, 0);
      d3d_vertex_normal_texture(x + 32, y + 32, ztop+z, 0, 0, -1, 1, 1);
      //
      d3d_vertex_normal_texture(x + 32, y + 32, ztop+z, 0, 0, -1, 1, 1);
      d3d_vertex_normal_texture(x, y + 32, ztop+z, 0, 0, -1, 0, 1);
      d3d_vertex_normal_texture(x, y, ztop+z, 0, 0, -1, 0, 0);
  d3d_primitive_end()
}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
